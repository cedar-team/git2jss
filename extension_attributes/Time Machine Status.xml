<?xml version="1.0" encoding="UTF-8"?><extensionAttribute>
<displayName>Time Machine Status</displayName>
<description/>
<dataType>string</dataType>
<scriptContentsMac>#!/usr/bin/python&#13;
&#13;
# Copyright (c) 2017 University of Utah Student Computing Labs. ################&#13;
# All Rights Reserved.&#13;
#&#13;
# Permission to use, copy, modify, and distribute this software and&#13;
# its documentation for any purpose and without fee is hereby granted,&#13;
# provided that the above copyright notice appears in all copies and&#13;
# that both that copyright notice and this permission notice appear&#13;
# in supporting documentation, and that the name of The University&#13;
# of Utah not be used in advertising or publicity pertaining to&#13;
# distribution of the software without specific, written prior&#13;
# permission. This software is supplied as is without expressed or&#13;
# implied warranties of any kind.&#13;
################################################################################&#13;
&#13;
# time_machine_status.py #######################################################&#13;
#&#13;
# A Python script monitor and report Time Machine settings.&#13;
#&#13;
#    1.0.0  2016.11.xx      Initial release. tjm&#13;
#&#13;
#&#13;
#&#13;
################################################################################&#13;
&#13;
# Notes ########################################################################&#13;
#&#13;
#&#13;
#&#13;
#&#13;
#&#13;
################################################################################&#13;
&#13;
from __future__ import print_function&#13;
import subprocess&#13;
import os&#13;
import datetime&#13;
&#13;
def main():&#13;
    tm_drive = "/Volumes/Time Machine"&#13;
    tm_config = False&#13;
    tm_d_avail = False&#13;
&#13;
    if os.path.isdir(tm_drive):&#13;
        tm_d_avail = True&#13;
&#13;
    dest_info = subprocess.check_output(['/usr/bin/tmutil', 'destinationinfo'])&#13;
&#13;
    if "tmutil: No" not in dest_info:&#13;
        tm_config = True&#13;
&#13;
    if tm_config:&#13;
        last_backup_raw = subprocess.check_output(['/usr/bin/tmutil', 'latestbackup'])&#13;
        last_backup_raw = last_backup_raw.split('/')[-1]&#13;
        year, month, day, time = last_backup_raw.split('-')&#13;
        time = time.split('\n')[0]&#13;
        # last_backup_date = month + day + year + ':' + time&#13;
        last_backup_date = month + "/" + day&#13;
&#13;
        if tm_d_avail:&#13;
            today = datetime.date.today()&#13;
            last_backup = datetime.date(year=int(year), month=int(month), day=int(day))&#13;
            backup_elapsed = today - last_backup&#13;
            if backup_elapsed.days &gt; 30:&#13;
                last_backup_mod = "Bad "&#13;
            else:&#13;
                last_backup_mod = "Good "&#13;
&#13;
            drive_size_raw = subprocess.check_output(["/bin/df", tm_drive]).split("\n")[1].split(" ")&#13;
            drive_size_raw = [x for x in drive_size_raw if x]&#13;
            tm_d_used = drive_size_raw[4].split("%")[0]&#13;
&#13;
            if int(tm_d_used) &gt; 90:&#13;
                tm_d_mod = " Bad "&#13;
            else:&#13;
                tm_d_mod = " Good "&#13;
&#13;
            tm_d_total = float(drive_size_raw[3])/(1024 ** 2)&#13;
            if tm_d_total &gt; 1000:&#13;
                tm_d_total = tm_d_total/1024&#13;
                tm_d_total = "%0.2fT" % tm_d_total&#13;
            else:&#13;
                tm_d_total = str(int(tm_d_total)) + "G"&#13;
&#13;
            return_string = last_backup_mod + last_backup_date + tm_d_mod + tm_d_used + "% free of " + tm_d_total&#13;
&#13;
        else:&#13;
            return_string = 'Last Backup: ' + last_backup_date + " Not SCL drive"&#13;
&#13;
    else:&#13;
        if tm_d_avail:&#13;
            return_string = 'Not configured, drive available'&#13;
        else:&#13;
            return_string = 'Not configured, no drive'&#13;
&#13;
    print("&lt;result&gt;" + return_string + "&lt;/result&gt;")&#13;
&#13;
if __name__ == '__main__':&#13;
    main()&#13;
</scriptContentsMac>
</extensionAttribute>
